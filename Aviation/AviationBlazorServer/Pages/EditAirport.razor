@page "/Airports/EditAirport/{AirportId}"
@inject AirportService _airportService;
@inject NavigationManager _navigationManager;

<h3>Edit Airport</h3>

@if(Airport == null)
{
<p>Loading...</p>
}
else
{
<EditForm Model="@Airport" OnValidSubmit="@UpdateAirportAsync">
<AirportFields Airport="@Airport"></AirportFields>
<button type="submit" class="btn btn-success">
<span class="oi-pencil"></span>
Update Airport
</button>
<button type="button"  class="btn btn-secondary" @onclick="Close">
<span class="oi oi-media-skip-backward"></span>
Close
</button>
</EditForm>
}


@code {
[Parameter]
public string AirportId { get; set; }
private Airport Airport { get; set; }
protected override async Task OnInitializedAsync()
{
Airport = await _airportService.GetAirportAsync(int.Parse(AirportId));
}
private async Task UpdateAirportAsync()
{
await _airportService.UpdateAirportAsync(Airport);
Close();
}
private void Close()
{
_navigationManager.NavigateTo("/Airports");
}
}
